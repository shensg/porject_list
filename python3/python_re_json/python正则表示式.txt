正则表达式
JSON(XML)



正则表达式是一个特殊字符序列，一个字符串是否与我们所设定的
这样的字符序列，相匹配

快速检索文本，实现一些替换文本的操作

1、检查一串数字是否电话号码
2、检测一个字符是否符合email
3、把一个文本里指定的单词替换为另一个单词

a = 'C0C++7Java8C#9Pyhton6Javascript'   # 字符串
r = re.findall('\d', a)    # 匹配一个数字字符。等价于[0-9]。grep 要加上-P，perl正则支持
r = re.findall('\D', a)    # 匹配一个非数字字符。等价于[^0-9]。grep要加上-P，perl正则支持

s = 'abc, acc, adc, afc, ahc'    # 字符集合
r = re.findall('a[cf]c', s)     # 字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。
r = re.findall('a[^cfd]c', s)   # 负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“plin”任一字符。
r = re.findall('a[c-f]c', s)   # 字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。

a = 'python1111java&6_ 78%php'  # 字符串
r  = re.findall('\W', a)     # 匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。
r  = re.findall('\w', a)     # 匹配包括下划线的任何单词字符。类似但不等价于“[A-Za-z0-9_]”，这里的"单词"字符使用Unicode字符集。
r  = re.findall('\S', a)     # 匹配任何可见字符。等价于[^ \f\n\r\t\v]。
r  = re.findall('\s', a)     # 匹配任何不可见字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。











